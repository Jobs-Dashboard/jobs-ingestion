server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    root /usr/share/nginx/html;
    index index.html index.htm;

    server_name localhost:9090;;

    location / {
        try_files $uri $uri/ =404;
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
}


worker_processes 1;

error_log stderr warn;

worker_rlimit_nofile  4096;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {

    # include       mime.types;
    default_type  application/octet-stream;

    access_log     off;
    server_tokens  off;
    sendfile       on;
    tcp_nopush     on;
    gzip           on;
    gzip_proxied   any;
    gzip_types     text/plain
                   text/html
                   text/css
                   application/javascript
                   application/x-javascript
                   application/json;

    keepalive_timeout        120;
    client_max_body_size     20M;
    client_body_buffer_size  1m;

    upstream backend {
        server application_server:9090;
    }

    auth_basic           "${RECORD_NAME}";
    auth_basic_user_file /etc/nginx/.htpasswd;

    server {
        listen 80;
        listen [::]:80;
        server_name www.${DOMAIN} ${DOMAIN};

        # Redirect to https
        return 301 https://${DOMAIN}${DOLLAR}request_uri;
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name www.${DOMAIN} ${DOMAIN};

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        charset utf-8;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        log_not_found off;
        types_hash_max_size 2048;
        client_max_body_size 16M;

        # Less verbose headers
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ecdh_curve X25519:sect571r1:secp521r1:secp384r1;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_ciphers 'TLS13+AESGCM+AES128:TLS13+AESGCM+AES256:TLS13+CHACHA20:EECDH+AESGCM:EECDH+CHACHA20';
        ssl_prefer_server_ciphers off;

        # App
        location / {
            proxy_set_header Host ${DOLLAR}host;
            proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
            proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;
            proxy_set_header Authorization "";
            proxy_pass http://backend;
        }

        # robots.txt
        location /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Deny automated User-Agents
        if (${DOLLAR}http_user_agent ~* LWP::Simple|BBBike|wget) {
            return 403;
        }

        # Letsencrypt challenge
        location ~ /\.well-known\/acme-challenge {
            allow all;
        }

        # Deny all attempts to access hidden files
        location ~ /\. {
            deny all;
        }
    }
}
